{
  "_args": [
    [
      {
        "raw": "react-native-modal-picker",
        "scope": null,
        "escapedName": "react-native-modal-picker",
        "name": "react-native-modal-picker",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/srinivasaganesan/Documents/Sathish_Champ/ReactNative/Nshoppy_Android"
    ]
  ],
  "_from": "react-native-modal-picker@latest",
  "_id": "react-native-modal-picker@0.0.16",
  "_inCache": true,
  "_location": "/react-native-modal-picker",
  "_nodeVersion": "5.1.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/react-native-modal-picker-0.0.16.tgz_1467744763326_0.8765061560552567"
  },
  "_npmUser": {
    "name": "d-a-n",
    "email": "dan@imake.io"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-modal-picker",
    "scope": null,
    "escapedName": "react-native-modal-picker",
    "name": "react-native-modal-picker",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-modal-picker/-/react-native-modal-picker-0.0.16.tgz",
  "_shasum": "c9324d880a3bb8f36b772f378164977e2f431cbc",
  "_shrinkwrap": null,
  "_spec": "react-native-modal-picker",
  "_where": "/Users/srinivasaganesan/Documents/Sathish_Champ/ReactNative/Nshoppy_Android",
  "author": {
    "name": "Daniel Korger",
    "email": "dan@imake.io"
  },
  "bugs": {
    "url": "https://github.com/d-a-n/react-native-modal-picker/issues"
  },
  "contributors": [
    {
      "name": "Alex Spring",
      "email": "notlose@hotmail.com"
    }
  ],
  "dependencies": {},
  "description": "[![npm version](https://badge.fury.io/js/react-native-modal-picker.svg)](https://badge.fury.io/js/react-native-modal-picker)",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "c9324d880a3bb8f36b772f378164977e2f431cbc",
    "tarball": "https://registry.npmjs.org/react-native-modal-picker/-/react-native-modal-picker-0.0.16.tgz"
  },
  "gitHead": "a2d0b9b4ea7b2ab8cb08ef28e4ea62fa49634945",
  "homepage": "https://github.com/d-a-n/react-native-modal-picker",
  "keywords": [
    "react-native",
    "dropdown",
    "popover",
    "select",
    "picker",
    "modal",
    "ios",
    "android",
    "react-component"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "d-a-n",
      "email": "dan@imake.io"
    }
  ],
  "name": "react-native-modal-picker",
  "optionalDependencies": {},
  "readme": "[![npm version](https://badge.fury.io/js/react-native-modal-picker.svg)](https://badge.fury.io/js/react-native-modal-picker)\n\n# react-native-modal-picker\nA cross-platform (iOS / Android), selector/picker component for React Native that is highly customizable and supports sections.\n\n## Demo\n\n<img src=\"https://raw.githubusercontent.com/d-a-n/react-native-modal-picker/master/docs/demo.gif\" />\n\n## Install\n\n```sh\nnpm i react-native-modal-picker --save\n```\n\n## Usage\n\nYou can either use this component as an wrapper around your existing component or use it in its default mode. In default mode a customizable button is rendered.\n\nSee `SampleApp` for an example how to use this component.\n\n```jsx\n\nimport ModalPicker from 'react-native-modal-picker'\n\n[..]\n\nclass SampleApp extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            textInputValue: ''\n        }\n    }\n\n    render() {\n        let index = 0;\n        const data = [\n            { key: index++, section: true, label: 'Fruits' },\n            { key: index++, label: 'Red Apples' },\n            { key: index++, label: 'Cherries' },\n            { key: index++, label: 'Cranberries' },\n            { key: index++, label: 'Pink Grapefruit' },\n            { key: index++, label: 'Raspberries' },\n            { key: index++, section: true, label: 'Vegetables' },\n            { key: index++, label: 'Beets' },\n            { key: index++, label: 'Red Peppers' },\n            { key: index++, label: 'Radishes' },\n            { key: index++, label: 'Radicchio' },\n            { key: index++, label: 'Red Onions' },\n            { key: index++, label: 'Red Potatoes' },\n            { key: index++, label: 'Rhubarb' },\n            { key: index++, label: 'Tomatoes' }\n        ];\n\n        return (\n            <View style={{flex:1, justifyContent:'space-around', padding:50}}>\n\n                <ModalPicker\n                    data={data}\n                    initValue=\"Select something yummy!\"\n                    onChange={(option)=>{ alert(`${option.label} (${option.key}) nom nom nom`) }} />\n\n                <ModalPicker\n                    data={data}\n                    initValue=\"Select something yummy!\"\n                    onChange={(option)=>{ this.setState({textInputValue:option.label})}}>\n                    \n                    <TextInput\n                        style={{borderWidth:1, borderColor:'#ccc', padding:10, height:30}}\n                        editable={false}\n                        placeholder=\"Select something yummy!\"\n                        value={this.state.textInputValue} />\n                        \n                </ModalPicker>\n            </View>\n        );\n    }\n}\n```\n\n## Props\n\n* `data - []` required, array of objects with a unique key and label\n* `style - object` optional, style definitions for the root element\n* `onChange - function` optional, callback function, when the users has selected an option\n* `initValue - string` optional, text that is initially shown on the button\n* `cancelText - string` optional, text of the cancel button\n* `selectStyle - object` optional, style definitions for the select element (available in default mode only!)\n* `selectTextStyle - object` optional, style definitions for the select element (available in default mode only!)\n* `overlayStyle - object` optional, style definitions for the overly/background element\n* `sectionStyle - object` optional, style definitions for the section element\n* `sectionTextStyle - object` optional, style definitions for the select text element\n* `optionStyle - object` optional, style definitions for the option element\n* `optionTextStyle - object` optional, style definitions for the option text element\n* `cancelStyle - object` optional, style definitions for the cancel element\n* `cancelTextStyle - object` optional, style definitions for the cancel text element\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d-a-n/react-native-modal-picker.git"
  },
  "scripts": {
    "postversion": "git push && git push --tags",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.16"
}
