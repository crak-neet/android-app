import React, { Component } from 'react';
import {
    Text,
    View,
    TextInput,
    TouchableOpacity,
    TouchableWithoutFeedback,
    Keyboard,
    Image,
    Modal,
    ScrollView,
    Platform,
    AsyncStorage
} from 'react-native';
import { fontSize, color, fontFamily } from '../../Asset/NeetStyles/fontsAndColors';
import { Header_BackIcon } from '../../Asset/Libraries/index'
import Button from '../../Asset/Libraries/Button';

import { connect, GridView, debounce } from '../../Asset/Libraries/NpmList';
import { wp, hp } from '../../Asset/Libraries/ResponsiveScreen';


import { SkiplistArray } from './../../Redux/Actions/SkiplistArray';

class SkippedTest_Module extends Component {
    constructor() {
        super();
        this.state = {

        }
        this.backIconPress = debounce(this.backIconPress.bind(this), 1000, {
            leading: true,
            trailing: false,
        });
    }
    componentWillMount() {

        AsyncStorage.getItem("Token", (error, Token) => {
            if (Token) {
                //  this.props.navigation.navigate('Drawer')
            } else {
                //this.props.navigation.navigate('Login')
            }
        })
    }
    componentDidMount() {

    }
    backIconPress() {
        this.props.navigation.navigate("Dashboard")
    }


    SkiplistArray(SkiplistArray) {
      //  console.error(SkiplistArray)

        

        this.props.SkiplistArray(SkiplistArray.QuestionNumber)
        this.props.navigation.navigate("ChapterTest_Questions")

    }

    onSubmit_Test(){
        alert("Submit Answered")
    }
    render() {

        const { Skiplist } = this.props.NeetReducer

        return (
            <View style={{ flex: 1, backgroundColor: "#F7F7F7", }}>
                <Header_BackIcon onPressLeftIcon={() => this.props.skipDebounce ? this.props.backIconPress : this.backIconPress()} HeaderText='Skipped Questions' />


                <View style={{ flex: 1, backgroundColor: color.white, margin: wp("3%"), borderColor: color.lightGray, borderWidth: wp("0.2%") }}>
                    <View style={{ height: wp("3%"), justifyContent: 'center' }} />

                    <View style={{ height: wp("7%"), justifyContent: 'center', marginLeft: wp("2%") }}>
                        <Text numberOfLines={1} style={{ fontSize: fontSize.lightMedium, backgroundColor: 'transparent', fontFamily: fontFamily.OpenSansSemiBold, textAlign: "justify", color: color.black }}>Confirmtion</Text>
                    </View>



                    <View style={{ height: wp("1%"), justifyContent: 'center' }} />

                    <View style={{ flex: 0.15, justifyContent: 'center', marginLeft: wp("5%"), marginRight: wp("5%") }}>
                        <Text style={{ fontSize: hp("2%"), fontFamily: fontFamily.OpenSansBold, textAlign: "justify", color: color.black }}>Please note you have skipped below Questions</Text>
                    </View>

                    <View style={{ height: wp("1%"), justifyContent: 'center' }} />
                    <View style={{ flex: 0.75, justifyContent: 'center', }}>

                        <GridView
                            style={{ paddingTop: wp("3%"), flex: 1 }}
                            itemWidth={wp("24%")}
                            items={Skiplist}
                            enableEmptySections={true}
                            renderItem={Skiplist => (



                                <TouchableOpacity onPress={() => this.SkiplistArray(Skiplist)} style={{ height: wp("12%"), justifyContent: 'center', alignItems: 'center', borderColor: color.lightGray, borderWidth: wp("0.2%"), backgroundColor: color.white, marginLeft: wp("2%"), marginRight: wp("2%") }}>
                                    {/* <TouchableOpacity style={{ height: wp('5%'), width: wp('5%'), borderRadius: wp('2.5%'), backgroundColor: '#3ce33d', zIndex: 1000, top: wp('6%'), left: wp('10%') }} /> */}
                                    <View style={{ height: wp("7%"), justifyContent: 'center' }}>
                                        <Text numberOfLines={1} style={{ fontSize: fontSize.lightMedium, backgroundColor: 'transparent', fontFamily: fontFamily.OpenSansRegular, textAlign: 'center', color: color.black }}>{Skiplist.QuestionName}</Text>
                                    </View>
                                </TouchableOpacity>



                            )}
                        />
                    </View>

                    <View style={{ height: wp("3%"), justifyContent: 'center' }} />

                    <View style={{ flex: 0.1, justifyContent: 'center' }}>
                        <Button OnButtonClicked={() => this.onSubmit_Test()} ButtonText='Submit Test' />
                    </View>

                    <View style={{ height: wp("3%"), justifyContent: 'center' }} />
                </View>

            </View>
        );
    }
}
const mapStateToProps = (state) => {
    return {
        NeetReducer: state.NeetReducer
    };
}

const mapDispatchToProps = (dispatch) => {
    return {

        SkiplistArray: (QuestionNumber,) => {
            dispatch(SkiplistArray(QuestionNumber,));
        },

    }
}
export default connect(mapStateToProps, mapDispatchToProps)(SkippedTest_Module);


