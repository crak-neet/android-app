import React, { Component } from 'react';
import {
    Text,
    View,
    TextInput,
    TouchableOpacity,
    TouchableWithoutFeedback,
    Keyboard,
    Image,
    ScrollView,
    Platform,
    Picker,
} from 'react-native';

var FathersName = ''
var FathersMobileNumber = ''
var FathersEmail = ''
var FathersOccupation = ''
var MothersName = ''
var MothersMobileNumber = ''
var MothersEmail = ''
var MothersOccupation = ''

import { fontSize, color, fontFamily, width, height, } from '../../Asset/NeetStyles/fontsAndColors';
import Button from '../../Asset/Libraries/Button';
import { textInputView, backIcon, title } from '../../Asset/NeetStyles/commonStyles';

import { wp, hp } from '../../Asset/Libraries/ResponsiveScreen';
import { debounce, Snackbar, Icon, connect, ModalPicker } from '../../Asset/Libraries/NpmList';
import { Validations } from '../../Asset/Libraries/Validations';


class Registration_2 extends Component {
    constructor() {
        console.disableYellowBox = true;
        Keyboard.dismiss()
        super();
        this.state = {
            FathersName: '',
            FathersMobileNumber: '',
            FathersEmail: '',
            FathersOccupation: '',
            MothersName: '',
            MothersMobileNumber: '',
            MothersEmail: '',
            MothersOccupation: '',
            // Device: "1",
            // IpAddress: "",
            // DeviceType: "",
            // PushNotificationId: "",
        }

        this.backIconPress = debounce(this.backIconPress.bind(this), 1000, {
            leading: true,
            trailing: false,
        });
        this.onNext = debounce(this.onNext.bind(this), 1000, {
            leading: true,
            trailing: false,
        });
    }

    componentWillMount() {

    }

    componentDidMount() {

    }
    backIconPress() {
        this.props.navigation.goBack()
    }
    onNext() {
        if (this.state.FathersName == "") {
            Snackbar.show({
                title: "Enter Your Father's Name",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (this.state.FathersMobileNumber == "") {
            Snackbar.show({
                title: "Enter Your Father's MobileNumber",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (this.state.FathersEmail == "") {
            Snackbar.show({
                title: "Enter Your Father's Email",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (!Validations.validateEmail(this.state.FathersEmail)) {
            Snackbar.show({
                title: "Father's Email is Invalid",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (this.state.FathersOccupation == "") {
            Snackbar.show({
                title: "Select Father's Occupation",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (this.state.MothersName == "") {
            Snackbar.show({
                title: "Enter Your Mother's Name",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (this.state.MothersMobileNumber == "") {
            Snackbar.show({
                title: "Enter Your Mother's MobileNumber",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (this.state.MothersEmail == "") {
            Snackbar.show({
                title: "Enter Your Mother's Email",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (!Validations.validateEmail(this.state.MothersEmail)) {
            Snackbar.show({
                title: "Mother's Email is Invalid",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else if (this.state.MothersOccupation == "") {
            Snackbar.show({
                title: "Select Mother's Occupation",
                duration: Snackbar.LENGTH_SHORT,
            });
        } else {
            this.props.navigation.navigate('Registration_3')
                FathersName = this.state.FathersName,
                FathersMobileNumber = this.state.FathersMobileNumber,
                FathersEmail = this.state.FathersEmail,
                FathersOccupation = this.state.FathersOccupation,
                MothersName = this.state.MothersName,
                MothersMobileNumber = this.state.MothersMobileNumber,
                MothersEmail = this.state.MothersEmail,
                MothersOccupation = this.state.MothersOccupation
        }
    }
    render() {
        let index = 0;
        const GenderListArray = [
            { key: index++, label: 'Red Apples' },
            { key: index++, label: 'Cherries' },
            { key: index++, label: 'Cranberries' },
            { key: index++, label: 'Pink Grapefruit' },
            { key: index++, label: 'Raspberries' },
            { key: index++, label: 'Red Potatoes' },
            { key: index++, label: 'Rhubarb' },
            { key: index++, label: 'Tomatoes' }
        ];

        return (
            // <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
            <View style={{ flex: 1, backgroundColor: color.white, }}>
                <View style={{ height: hp('8%'), flexDirection: 'row' }}>
                    <TouchableOpacity onPress={() => this.props.skipDebounce ? this.props.backIconPress : this.backIconPress()} style={backIcon.iconView}>
                        <Image source={require('../../Asset/Icons/left-arrow.png')} style={{ height: hp('3%'), width: hp('3%'), tintColor: color.lightGray }} />
                    </TouchableOpacity>
                    <View style={{ flex: 6, justifyContent: 'center' }}>
                        <Text style={{ fontSize: fontSize.Medium, fontFamily: fontFamily.OpenSansBold, textAlign: 'center' }}>Registration</Text>
                    </View>
                    <View style={{ flex: 2, }}>
                    </View>
                </View>

                <View style={{ height: hp('7%'), justifyContent: 'center' }}>
                    <View style={{ justifyContent: 'center', alignItems: 'center', flexDirection: 'row', marginLeft: wp('18%'), marginRight: wp('18%') }}>
                        <View style={{ height: wp('8%'), width: wp('8%'), borderRadius: wp('8%'), backgroundColor: color.appRed, borderColor: color.appRed, justifyContent: 'center', alignItems: 'center' }}>
                            <Text style={{ fontSize: fontSize.Small, color: color.white, fontFamily: fontFamily.OpenSansSemiBold }}>1</Text>
                        </View>

                        <View style={{ height: hp('0.3'), width: wp('13%'), backgroundColor: color.appRed }} />

                        <View style={{ height: wp('8%'), width: wp('8%'), borderRadius: wp('8%'), backgroundColor: color.appRed, borderColor: color.appRed, borderWidth: wp('0.6%'), justifyContent: 'center', alignItems: 'center' }}>
                            <Text style={{ fontSize: fontSize.Small, color: color.white, fontFamily: fontFamily.OpenSansSemiBold }}>2</Text>
                        </View>

                        <View style={{ height: hp('0.3'), width: wp('13%'), backgroundColor: color.black }} />

                        <View style={{ height: wp('8%'), width: wp('8%'), borderRadius: wp('8%'), backgroundColor: color.white, borderColor: color.black, borderWidth: wp('0.6%'), justifyContent: 'center', alignItems: 'center' }}>
                            <Text style={{ fontSize: fontSize.Small, color: color.black, fontFamily: fontFamily.OpenSansRegular }}>3</Text>
                        </View>
                    </View>
                </View>

                <View style={{ height: hp('6%'), justifyContent: 'center', marginTop: hp('1%') }}>
                    <Text style={{ color: color.appRed, fontSize: fontSize.Small, fontFamily: fontFamily.OpenSansRegular, textAlign: 'center' }}>Parent Details</Text>
                </View>

                <TouchableWithoutFeedback onPress={Keyboard.dismiss}>
                    <ScrollView showsVerticalScrollIndicator={false}>

                        <View style={{ height: hp('7%'), flexDirection: 'row', borderRadius: 30, marginLeft: wp('10%'), marginRight: wp('10%'), borderColor: color.lightGray, borderWidth: hp('0.2%'), marginTop: hp('2%') }}>
                            <View style={{ flex: 2, justifyContent: 'center', alignItems: 'center' }}>
                                <Image source={require('../../Asset/Icons/avatar.png')} style={textInputView.textInputIconStyle} />
                            </View>
                            <View style={{ flex: 8, justifyContent: 'center' }}>
                                <TextInput
                                    placeholder="Father's Name"
                                    ref='FathersName'
                                    returnKeyType='next'
                                    underlineColorAndroid='transparent'
                                    style={{ fontSize: fontSize.lightMedium, fontFamily: fontFamily.OpenSansRegular, }}
                                    onChangeText={(FathersName) => this.setState({ FathersName })}
                                    onSubmitEditing={() => this.refs.FathersMobileNumber.focus()}
                                />
                            </View>
                        </View>

                        <View style={{ height: hp('7%'), flexDirection: 'row', borderRadius: 30, marginLeft: wp('10%'), marginRight: wp('10%'), borderColor: color.lightGray, borderWidth: hp('0.2%'), marginTop: hp('2%') }}>
                            <View style={{ flex: 2, justifyContent: 'center', alignItems: 'center' }}>
                                <Image source={require('../../Asset/Icons/smartphone.png')} style={textInputView.textInputIconStyle} />
                            </View>
                            <View style={{ flex: 8, justifyContent: 'center' }}>
                                <TextInput
                                    placeholder="Father's Mobile"
                                    keyboardType="numeric"
                                    ref='FathersMobileNumber'
                                    returnKeyType='next'
                                    underlineColorAndroid='transparent'
                                    style={{ fontSize: fontSize.lightMedium, fontFamily: fontFamily.OpenSansRegular, }}
                                    onChangeText={(FathersMobileNumber) => this.setState({ FathersMobileNumber })}
                                    onSubmitEditing={() => this.refs.FathersEmail.focus()}
                                />
                            </View>
                        </View>

                        <View style={{ height: hp('7%'), flexDirection: 'row', borderRadius: 30, marginLeft: wp('10%'), marginRight: wp('10%'), borderColor: color.lightGray, borderWidth: hp('0.2%'), marginTop: hp('2%') }}>
                            <View style={{ flex: 2, justifyContent: 'center', alignItems: 'center' }}>
                                <Image source={require('../../Asset/Icons/e-mail-envelope.png')} style={textInputView.textInputIconStyle} />
                            </View>
                            <View style={{ flex: 8, justifyContent: 'center' }}>
                                <TextInput
                                    placeholder="Father's Email"
                                    ref='FathersEmail'
                                    returnKeyType='next'
                                    underlineColorAndroid='transparent'
                                    style={{ fontSize: fontSize.lightMedium, fontFamily: fontFamily.OpenSansRegular, }}
                                    onChangeText={(FathersEmail) => this.setState({ FathersEmail })}
                                // onSubmitEditing={() => this.refs.Address.focus()}
                                />
                            </View>
                        </View>

                        <View style={{ height: hp('7%'), flexDirection: 'row', borderRadius: 30, marginLeft: wp('10%'), marginRight: wp('10%'), borderColor: color.lightGray, borderWidth: hp('0.2%'), marginTop: hp('2%') }}>
                            <View style={{ flex: 0.19, justifyContent: 'center', alignItems: 'center' }}>
                                <Image source={require('../../Asset/Icons/portfolio.png')} style={{ height: wp('6%'), width: wp('6%'), tintColor: color.appGreen }} />
                            </View>
                            <View style={{ flex: 0.81, justifyContent: 'center', marginRight: wp('2%') }}>
                                <ModalPicker
                                    data={GenderListArray}
                                    initValue={"Father's Occupation"}
                                    optionStyle={{ paddingTop: height / 100 * 2, borderBottomWidth: 1, borderBottomColor: '#ccc', justifyContent: 'center', }}

                                    cancelContainer={{ borderRadius: 0, width: width, top: (height - height / 100 * 75) / 2 }}
                                    cancelStyle={{ justifyContent: 'center', alignItems: 'center' }}
                                    cancelTextStyle={{ fontSize: fontSize.Medium, fontFamily: 'OpenSans-Regular', letterSpacing: width / 100 * 0.15, color: '#fff', }}

                                    overlayStyle={{ width: width, height: height, backgroundColor: 'rgba(0,0,0,0.7)', justifyContent: 'center' }}
                                    optionTextStyle={{ fontSize: fontSize.Small, padding: width / 100 * 0.5, color: '#393939', fontFamily: 'OpenSans-Regular', letterSpacing: width / 100 * 0.15 }}

                                    sectionStyle={{ borderBottomWidth: 1, borderBottomColor: '#ccc', justifyContent: 'center' }}
                                    sectionTextStyle={{ fontSize: fontSize.Small, color: '#393939', fontFamily: 'OpenSans-Regular', letterSpacing: width / 100 * 0.15 }}
                                    selectTextStyle={{ color: color.lightGray, fontSize: fontSize.Small, fontFamily: 'OpenSans-Regular', letterSpacing: width / 100 * 0.15 }}
                                    selectStyle={{ height: height / 100 * 5, flex: 0, borderColor: '#fff', justifyContent: 'center', borderWidth: 0, padding: 0, borderRadius: 0 }}

                                    onChange={(option) => { this.setState({ FathersOccupation: option.label }) }}
                                />
                            </View>
                        </View>

                        <View style={{ height: hp('7%'), flexDirection: 'row', borderRadius: 30, marginLeft: wp('10%'), marginRight: wp('10%'), borderColor: color.lightGray, borderWidth: hp('0.2%'), marginTop: hp('2%') }}>
                            <View style={{ flex: 2, justifyContent: 'center', alignItems: 'center' }}>
                                <Image source={require('../../Asset/Icons/mother.png')} style={textInputView.textInputIconStyle} />
                            </View>
                            <View style={{ flex: 8, justifyContent: 'center' }}>
                                <TextInput
                                    placeholder="Mother's Name"
                                    ref='MothersName'
                                    returnKeyType='next'
                                    underlineColorAndroid='transparent'
                                    style={{ fontSize: fontSize.lightMedium, fontFamily: fontFamily.OpenSansRegular, }}
                                    onChangeText={(MothersName) => this.setState({ MothersName })}
                                    onSubmitEditing={() => this.refs.MothersMobileNumber.focus()}
                                />
                            </View>
                        </View>

                        <View style={{ height: hp('7%'), flexDirection: 'row', borderRadius: 30, marginLeft: wp('10%'), marginRight: wp('10%'), borderColor: color.lightGray, borderWidth: hp('0.2%'), marginTop: hp('2%') }}>
                            <View style={{ flex: 2, justifyContent: 'center', alignItems: 'center' }}>
                                <Image source={require('../../Asset/Icons/smartphone.png')} style={textInputView.textInputIconStyle} />
                            </View>
                            <View style={{ flex: 8, justifyContent: 'center' }}>
                                <TextInput
                                    placeholder="Mother's Mobile"
                                    keyboardType="numeric"
                                    ref='MothersMobileNumber'
                                    returnKeyType='next'
                                    underlineColorAndroid='transparent'
                                    style={{ fontSize: fontSize.lightMedium, fontFamily: fontFamily.OpenSansRegular, }}
                                    onChangeText={(MothersMobileNumber) => this.setState({ MothersMobileNumber })}
                                    onSubmitEditing={() => this.refs.MothersEmail.focus()}
                                />
                            </View>
                        </View>

                        <View style={{ height: hp('7%'), flexDirection: 'row', borderRadius: 30, marginLeft: wp('10%'), marginRight: wp('10%'), borderColor: color.lightGray, borderWidth: hp('0.2%'), marginTop: hp('2%') }}>
                            <View style={{ flex: 2, justifyContent: 'center', alignItems: 'center' }}>
                                <Image source={require('../../Asset/Icons/e-mail-envelope.png')} style={textInputView.textInputIconStyle} />
                            </View>
                            <View style={{ flex: 8, justifyContent: 'center' }}>
                                <TextInput
                                    placeholder="Mother's Email"
                                    ref='MothersEmail'
                                    returnKeyType='next'
                                    underlineColorAndroid='transparent'
                                    style={{ fontSize: fontSize.lightMedium, fontFamily: fontFamily.OpenSansRegular, }}
                                    onChangeText={(MothersEmail) => this.setState({ MothersEmail })}
                                // onSubmitEditing={() => this.refs.Address.focus()}
                                />
                            </View>
                        </View>

                        <View style={{ height: hp('7%'), flexDirection: 'row', borderRadius: 30, marginLeft: wp('10%'), marginRight: wp('10%'), borderColor: color.lightGray, borderWidth: hp('0.2%'), marginTop: hp('2%') }}>
                            <View style={{ flex: 0.19, justifyContent: 'center', alignItems: 'center' }}>
                                <Image source={require('../../Asset/Icons/portfolio.png')} style={{ height: wp('6%'), width: wp('6%'), tintColor: color.appGreen }} />
                            </View>
                            <View style={{ flex: 0.81, justifyContent: 'center', marginRight: wp('2%') }}>
                                <ModalPicker
                                    data={GenderListArray}
                                    initValue={"Mother's Occupation"}
                                    optionStyle={{ paddingTop: height / 100 * 2, borderBottomWidth: 1, borderBottomColor: '#ccc', justifyContent: 'center', }}

                                    cancelContainer={{ borderRadius: 0, width: width, top: (height - height / 100 * 75) / 2 }}
                                    cancelStyle={{ justifyContent: 'center', alignItems: 'center' }}
                                    cancelTextStyle={{ fontSize: fontSize.Medium, fontFamily: 'OpenSans-Regular', letterSpacing: width / 100 * 0.15, color: '#fff', }}

                                    overlayStyle={{ width: width, height: height, backgroundColor: 'rgba(0,0,0,0.7)', justifyContent: 'center' }}
                                    optionTextStyle={{ fontSize: fontSize.Small, padding: width / 100 * 0.5, color: '#393939', fontFamily: 'OpenSans-Regular', letterSpacing: width / 100 * 0.15 }}

                                    sectionStyle={{ borderBottomWidth: 1, borderBottomColor: '#ccc', justifyContent: 'center' }}
                                    sectionTextStyle={{ fontSize: fontSize.Small, color: '#393939', fontFamily: 'OpenSans-Regular', letterSpacing: width / 100 * 0.15 }}
                                    selectTextStyle={{ color: color.lightGray, fontSize: fontSize.Small, fontFamily: 'OpenSans-Regular', letterSpacing: width / 100 * 0.15 }}
                                    selectStyle={{ height: height / 100 * 5, flex: 0, borderColor: '#fff', justifyContent: 'center', borderWidth: 0, padding: 0, borderRadius: 0 }}

                                    onChange={(option) => { this.setState({ MothersOccupation: option.label }) }}
                                />
                            </View>
                        </View>
                        <View style={{ height: hp('2%') }}></View>

                        <Button OnButtonClicked={() => this.props.skipDebounce ? this.props.onNext : this.onNext()} ButtonText='Next' />

                        <View style={{ height: hp('3%') }}></View>

                    </ScrollView>
                </TouchableWithoutFeedback>

            </View>
            // </TouchableWithoutFeedback>
        );
    }
}

const mapStateToProps = (state) => {
    return {
        // CommonReducer: state.CommonReducer
    };
}

const mapDispatchToProps = (dispatch) => {
    return {
        // LoginAction: (Username, Password, Latitude, Longitude, Device, IpAddress, DeviceId, DeviceType, PushNotificationId) => {
        //     dispatch(LoginAction(Username, Password, Latitude, Longitude, Device, IpAddress, DeviceId, DeviceType, PushNotificationId));
        // },

    }
}
export {
    FathersName, FathersMobileNumber, FathersEmail, FathersOccupation, MothersName, MothersMobileNumber, MothersEmail, MothersOccupation
}
export default connect(mapStateToProps, mapDispatchToProps)(Registration_2);